<%player1 = locals[:player1]%>
<%player2 = locals[:player2]%>
            <div class="col-md-6">
              <!-- AREA CHART -->
              <div class="box box-primary">
                <div class="box-header">
                  <h3 class="box-title">Area Chart</h3>
                </div>
                <div class="box-body">
                  <canvas id="areaChart" height="250"></canvas>
                </div><!-- /.box-body -->
              </div><!-- /.box -->


            </div><!-- /.col (LEFT) -->           

    <!-- jQuery 2.1.3 -->
    <script src="/backend/plugins/jQuery/jQuery-2.1.3.min.js"></script>
    <script src="/backend/plugins/chartjs/Chart.min.js" type="text/javascript"></script>
    <!-- page script -->
    <script>
      $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var areaChart = new Chart(areaChartCanvas);

        var areaChartData = {
          labels: ["0"

<%
    difference = 0
    Smackdown.where(player1_id: [player1.id,player2.id], player2_id: [player1.id,player2.id], judge1_winner_id: [player1.id,player2.id], judge2_winner_id: [player1.id,player2.id]).each do |smackdown|
      if smackdown.judge1_winner_id == player1.id && smackdown.judge2_winner_id == player1.id
        difference += 1
      elsif smackdown.judge1_winner_id == player2.id && smackdown.judge2_winner_id == player2.id
        difference -= 1
      end
%>
,"<%=difference%>"
<%
    end
%>

],
          datasets: [
           {
              label: "Digital Goods",
              fillColor: "rgba(60,141,188,0.9)",
              strokeColor: "rgba(60,141,188,0.8)",
              pointColor: "#3b8bba",
              pointStrokeColor: "rgba(60,141,188,1)",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(60,141,188,1)",
              data: [0
<%
difference = 0
    Smackdown.where(player1_id: [player1.id,player2.id], player2_id: [player1.id,player2.id], judge1_winner_id: [player1.id,player2.id], judge2_winner_id: [player1.id,player2.id]).each do |smackdown|
      if smackdown.judge1_winner_id == player1.id && smackdown.judge2_winner_id == player1.id
        difference += 1
      elsif smackdown.judge1_winner_id == player2.id && smackdown.judge2_winner_id == player2.id
        difference -= 1
      end
%>
,<%=difference%>
<%
    end
%>
]
            }
          ]
        };
        var areaChartOptions = {
          //Boolean - If we should show the scale at all
          showScale: true,
          //Boolean - Whether grid lines are shown across the chart
          scaleShowGridLines: false,
          //String - Colour of the grid lines
          scaleGridLineColor: "rgba(0,0,0,.05)",
          //Number - Width of the grid lines
          scaleGridLineWidth: 1,
          //Boolean - Whether to show horizontal lines (except X axis)
          scaleShowHorizontalLines: true,
          //Boolean - Whether to show vertical lines (except Y axis)
          scaleShowVerticalLines: true,
          //Boolean - Whether the line is curved between points
          bezierCurve: true,
          //Number - Tension of the bezier curve between points
          bezierCurveTension: 0.3,
          //Boolean - Whether to show a dot for each point
          pointDot: false,
          //Number - Radius of each point dot in pixels
          pointDotRadius: 4,
          //Number - Pixel width of point dot stroke
          pointDotStrokeWidth: 1,
          //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
          pointHitDetectionRadius: 20,
          //Boolean - Whether to show a stroke for datasets
          datasetStroke: true,
          //Number - Pixel width of dataset stroke
          datasetStrokeWidth: 2,
          //Boolean - Whether to fill the dataset with a color
          datasetFill: false,
          //String - A legend template
          //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
          maintainAspectRatio: false,
          //Boolean - whether to make the chart responsive to window resizing
          responsive: true
        };

        //Create the line chart
        areaChart.Line(areaChartData, areaChartOptions);



      });
    </script>

